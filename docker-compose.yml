version: '3'
services:
  backend:
    container_name: backend
    build: .
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
       - postgres
    networks:
      - woden


  postgres:
     image: postgres:latest
     container_name: postgres
     restart: always
     environment:
       - POSTGRES_USER=${DB_USER}
       - POSTGRES_PASSWORD=${DB_PASSWORD}
       - POSTGRES_DB=${DB_NAME}
       - DATABASE_HOST=${DB_HOST}
     ports:
       - '5432:5432'
     volumes:
       - database_postgres:/var/lib/postgresql
     networks:
       - woden

  pgadmin:
     image: dpage/pgadmin4
     container_name: pgadmin
     environment:
       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
     depends_on:
       - postgres
     ports:
       - "5050:80"
     networks:
       - woden
     restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    network_mode: service:backend
    volumes:
      - ./storage/redis:/data
    entrypoint: redis-server --appendonly yes

#  cypress:
#    image: cypress
#    build: ./e2e
#    container_name: cypress
#    depends_on:
#      - backend
#    network_mode: host


volumes:
  api:
  database_postgres:
  
# Networks to be created to facilitate communication between containers
networks:
  woden:
    driver: bridge

